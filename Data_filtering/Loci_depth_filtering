#Read in VCFtools output file for depth per SNP
Depth <- read.xlsx("VCFtools_depth.xlsx", sheetName = "Depth_site") #file can be called as you like
Depth_site <- Depth
SNP_rm <- Depth

#get the mean depth for each loci - remember you can't run haplotypic data in VCF tools so it is run for each SNP/loci and so need need to be given results per loci
Depth_site$MEAN_DEPTH <- as.numeric(as.character(Depth_site$MEAN_DEPTH))
Depth_site$CHROM <- as.character(Depth_site$CHROM)
Depth_site <- aggregate(MEAN_DEPTH~CHROM, Depth_site, mean) #calculating the mean per loci

#calculate the standard deviation
sd(as.numeric(Depth_site$MEAN_DEPTH))

#calculate the overall mean
mean(as.numeric(Depth_site$MEAN_DEPTH))

#identify loci which are 2SDs above the mean to be removed (rm)
SD_rm <- filter(Depth_site, MEAN_DEPTH > (mean(as.numeric(Depth_site$MEAN_DEPTH))+(2*sd(as.numeric(Depth_site$MEAN_DEPTH)))))

#a plot for interest
ggplot(Depth_site, aes(as.character(CHROM), as.numeric(MEAN_DEPTH))) +
  geom_point() +
  geom_hline(yintercept = mean(as.numeric(Depth_site$MEAN_DEPTH)), color = "red") +
  geom_hline(yintercept = (mean(as.numeric(Depth_site$MEAN_DEPTH))+(2*sd(as.numeric(Depth_site$MEAN_DEPTH)))), color = "blue") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
  
#calculate how many SNPs there are per loci
#if greater than 5 SNPs/loci then remove loci
SNP_rm$count <- rep(1)
SNP_rm$CHROM <- as.character(SNP_rm$CHROM)
SNP_rm <- aggregate(count~CHROM, SNP_rm, sum) #counts the number of SNPs per loci

SNP_rm_these <- filter(SNP_rm, count > 5) #ID loci with more than 5 SNPS on them
SNP_rm_these$LOCUS <- SNP_rm_these$CHROM

#See if there are any loci that are 2SDs above the mean and fall into the category of having more than 5 SNPs
semi_join(SD_rm, SNP_rm_these)

#remove loci 2SDs > mean and loci w/ >5 SNPs from data
loci_filtered_df <- tidy_genomic_data("populations.haps.vcf", strata = "strata.tsv", parallel.core = 1, filter.common.markers = FALSE, filter.monomorphic = FALSE)
loci_filtered_df <- anti_join(loci_filtered_df, SD_rm, by = "LOCUS")
loci_filtered_df <- anti_join(loci_filtered_df, SNP_rm_these, by = "LOCUS")
